apiVersion: v1
kind: Service
metadata:
  name: config-server
  labels:
    app: config-server
    service: config-server
spec:
  ports:
    - port: 9999
      name: http
  selector:
    app: config-server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: config-server-sa
  labels:
    account: config-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  labels:
    app: config-server
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config-server
      version: latest
  template:
    metadata:
      labels:
        app: config-server
        version: latest
    spec:
      serviceAccountName: config-server-sa
      containers:
        - name: config-server
          image: kimleangk/config-server
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9999
          envFrom:
            - configMapRef:
                name: common-variables
---
##################################################################################################
# API Gateway
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels:
    app: api-gateway
    service: api-gateway
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: api-gateway
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway-sa
  labels:
    account: api-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: api-gateway
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
      version: latest
  template:
    metadata:
      labels:
        app: api-gateway
        version: latest
    spec:
      serviceAccountName: api-gateway-sa
      containers:
        - name: api-gateway
          image: kimleangk/api-gateway
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: common-variables
          env:
            - name: spring.data.redis.host
              value: "redis"
            - name: spring.data.redis.port
              value: "6379"
            - name: cors.allowed-host
              value: "http://localhost:5173,http://localhost:8080,http://servicemesh.demo"
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  annotations:
#    nginx.ingress.kubernetes.io/ssl-redirect: "false"
#    nginx.ingress.kubernetes.io/rewrite-target: /$2
#  name: api-gateway-ingress
#  labels:
#    app: api-gateway
#    service: api-gateway
#spec:
#  ingressClassName: nginx
#  rules:
#    - host: servicemesh.demo
#      http:
#        paths:
#          - path: /gateway(/|$)(.*)
#            pathType: ImplementationSpecific
#            backend:
#              service:
#                name: api-gateway
#                port:
#                  number: 9000
---
###################################################################################################
## Product service
###################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: product-service
  labels:
    app: product-service
    service: product-service
spec:
  ports:
    - port: 8081
      name: http
  selector:
    app: product-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: product-service-sa
  labels:
    account: product-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  labels:
    app: product-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
      version: v1
  template:
    metadata:
      labels:
        app: product-service
        version: v1
    spec:
      serviceAccountName: product-service-sa
      containers:
        - name: product-service
          image: kimleangk/product-service
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          envFrom:
            - configMapRef:
                name: common-variables
          env:
            - name: DATABASE_HOST
              value: "postgres"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: "ecommerce"
            - name: DATABASE_USER
              value: "postgres"
            - name: DATABASE_PASSWORD
              value: "securepassword"
---
###################################################################################################
## Order service
###################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: order-service
  labels:
    app: order-service
    service: order-service
spec:
  ports:
    - port: 8082
      name: http
  selector:
    app: order-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: order-service-sa
  labels:
    account: order-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  labels:
    app: order-service
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
      version: latest
  template:
    metadata:
      labels:
        app: order-service
        version: latest
    spec:
      serviceAccountName: order-service-sa
      containers:
        - name: order-service
          image: kimleangk/order-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
          envFrom:
            - configMapRef:
                name: common-variables
          env:
            - name: DATABASE_HOST
              value: "postgres"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: "ecommerce"
            - name: DATABASE_USER
              value: "postgres"
            - name: DATABASE_PASSWORD
              value: "securepassword"
---
###################################################################################################
## Inventory service
###################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  labels:
    app: inventory-service
    service: inventory-service
spec:
  ports:
    - port: 8083
      name: http
  selector:
    app: inventory-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inventory-service-sa
  labels:
    account: inventory-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  labels:
    app: inventory-service
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-service
      version: latest
  template:
    metadata:
      labels:
        app: inventory-service
        version: latest
    spec:
      serviceAccountName: inventory-service-sa
      containers:
        - name: inventory-service
          image: kimleangk/inventory-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          envFrom:
            - configMapRef:
                name: common-variables
          env:
            - name: DATABASE_HOST
              value: "postgres"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_NAME
              value: "ecommerce"
            - name: DATABASE_USER
              value: "postgres"
            - name: DATABASE_PASSWORD
              value: "securepassword"
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  labels:
    app: notification-service
    service: notification-service
spec:
  ports:
    - port: 8084
      name: http
  selector:
    app: notification-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: notification-service-sa
  labels:
    account: notification-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  labels:
    app: notification-service
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
      version: latest
  template:
    metadata:
      labels:
        app: notification-service
        version: latest
    spec:
      serviceAccountName: notification-service-sa
      containers:
        - name: notification-service
          image: kimleangk/notification-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8084
          envFrom:
            - configMapRef:
                name: common-variables
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
    service: frontend
spec:
  ports:
    - port: 80
      name: http
  selector:
    app: frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-sa
  labels:
    account: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      version: latest
  template:
    metadata:
      labels:
        app: frontend
        version: latest
    spec:
      serviceAccountName: frontend-sa
      containers:
        - name: frontend
          image: kimleangk/frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80