##################################################################################################
# API Gateway
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  labels:
    app: api-gateway
    service: api-gateway
spec:
  ports:
    - port: 9000
      name: http
  selector:
    app: api-gateway
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-gateway-sa
  labels:
    account: api-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: api-gateway
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
      version: latest
  template:
    metadata:
      labels:
        app: api-gateway
        version: latest
    spec:
      serviceAccountName: api-gateway-sa
      containers:
        - name: api-gateway
          image: kimleangk/api-gateway:v2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
          env:
            - name: SERVICES_URLS_PRODUCT_SERVICE
              value: "http://product-service:8080"
            - name: SERVICES_URLS_ORDER_SERVICE
              value: "http://order-service:8081"
            - name: SERVICES_URLS_INVENTORY_SERVICE
              value: "http://inventory-service:8082"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: api-gateway-ingress
  labels:
    app: api-gateway
    service: api-gateway
spec:
  ingressClassName: nginx
  rules:
    - host: servicemesh.demo
      http:
        paths:
          - path: /gateway(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: api-gateway
                port:
                  number: 9000
---
##################################################################################################
# Product service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: product-service
  labels:
    app: product-service
    service: product-service
spec:
  ports:
    - port: 8080
      name: http
  selector:
    app: product-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: product-service-sa
  labels:
    account: product-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-v1
  labels:
    app: product-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
      version: v1
  template:
    metadata:
      labels:
        app: product-service
        version: v1
    spec:
      serviceAccountName: product-service-sa
      containers:
        - name: product-service
          image: kimleangk/product-service:v1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-v2
  labels:
    app: product-service
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
      version: v2
  template:
    metadata:
      labels:
        app: product-service
        version: v2
    spec:
      serviceAccountName: product-service-sa
      containers:
        - name: product-service-v2
          image: kimleangk/product-service:v2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-v3
  labels:
    app: product-service
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
      version: v3
  template:
    metadata:
      labels:
        app: product-service
        version: v3
    spec:
      serviceAccountName: product-service-sa
      containers:
        - name: product-service-v3
          image: kimleangk/product-service:v3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-v4
  labels:
    app: product-service
    version: v4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
      version: v4
  template:
    metadata:
      labels:
        app: product-service
        version: v4
    spec:
      serviceAccountName: product-service-sa
      containers:
        - name: product-service-v4
          image: kimleangk/product-service:v4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-latest
  labels:
    app: product-service
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
      version: latest
  template:
    metadata:
      labels:
        app: product-service
        version: latest
    spec:
      serviceAccountName: product-service-sa
      containers:
        - name: product-service-latest
          image: kimleangk/product-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
---
##################################################################################################
# Order service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: order-service
  labels:
    app: order-service
    service: order-service
spec:
  ports:
    - port: 8081
      name: http
  selector:
    app: order-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: order-service-sa
  labels:
    account: order-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  labels:
    app: order-service
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
      version: latest
  template:
    metadata:
      labels:
        app: order-service
        version: latest
    spec:
      serviceAccountName: order-service-sa
      containers:
        - name: order-service
          image: kimleangk/order-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
          env:
            - name: SERVICES_URLS_PRODUCT_SERVICE
              value: "http://product-service:8080"
            - name: SERVICES_URLS_ORDER_SERVICE
              value: "http://order-service:8081"
            - name: SERVICES_URLS_INVENTORY_SERVICE
              value: "http://inventory-service:8082"
---
##################################################################################################
# Inventory service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  labels:
    app: inventory-service
    service: inventory-service
spec:
  ports:
    - port: 8082
      name: http
  selector:
    app: inventory-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inventory-service-sa
  labels:
    account: inventory-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  labels:
    app: inventory-service
    version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-service
      version: latest
  template:
    metadata:
      labels:
        app: inventory-service
        version: latest
    spec:
      serviceAccountName: inventory-service-sa
      containers:
        - name: inventory-service
          image: kimleangk/inventory-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8082